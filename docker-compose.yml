services:
  gateway:
    build: ./services/gateway
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/local-development-key.json
      - API_SERVICE_URL=http://api:8081
      - AI_SERVICE_URL=http://ai:8082
      - TEST_BYPASS_TOKEN=${TEST_BYPASS_TOKEN}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - CLERK_DOMAIN=${CLERK_DOMAIN}
      - CLERK_JWKS_URL=${CLERK_JWKS_URL}
    volumes:
      - ./local-development-key.json:/app/local-development-key.json:ro
    depends_on:
      - api
      - ai
    networks:
      - app-network

  api:
    build: ./services/api
    ports:
      - "8081:8081"
    environment:
      - ENVIRONMENT=development
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/local-development-key.json
      - STORAGE_BUCKET=rs-template-dev-uploads
    volumes:
      - ./local-development-key.json:/app/local-development-key.json:ro
    networks:
      - app-network

  ai:
    build: ./services/ai
    ports:
      - "8082:8082"
    environment:
      - ENVIRONMENT=development
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/local-development-key.json
      - MODEL_PROVIDER=${MODEL_PROVIDER}
      - MODEL_NAME=${MODEL_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST}
    volumes:
      - ./local-development-key.json:/app/local-development-key.json:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
